// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_GETAUTHENTICATIONNONCERESPONSE_MONOCLE_H_
#define FLATBUFFERS_GENERATED_GETAUTHENTICATIONNONCERESPONSE_MONOCLE_H_

#include "flatbuffers/flatbuffers.h"

namespace monocle {

struct GetAuthenticationNonceResponse;
struct GetAuthenticationNonceResponseBuilder;

struct GetAuthenticationNonceResponse FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef GetAuthenticationNonceResponseBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_NONCE = 4
  };
  const flatbuffers::String *nonce() const {
    return GetPointer<const flatbuffers::String *>(VT_NONCE);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_NONCE) &&
           verifier.VerifyString(nonce()) &&
           verifier.EndTable();
  }
};

struct GetAuthenticationNonceResponseBuilder {
  typedef GetAuthenticationNonceResponse Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_nonce(flatbuffers::Offset<flatbuffers::String> nonce) {
    fbb_.AddOffset(GetAuthenticationNonceResponse::VT_NONCE, nonce);
  }
  explicit GetAuthenticationNonceResponseBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<GetAuthenticationNonceResponse> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<GetAuthenticationNonceResponse>(end);
    return o;
  }
};

inline flatbuffers::Offset<GetAuthenticationNonceResponse> CreateGetAuthenticationNonceResponse(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> nonce = 0) {
  GetAuthenticationNonceResponseBuilder builder_(_fbb);
  builder_.add_nonce(nonce);
  return builder_.Finish();
}

inline flatbuffers::Offset<GetAuthenticationNonceResponse> CreateGetAuthenticationNonceResponseDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *nonce = nullptr) {
  auto nonce__ = nonce ? _fbb.CreateString(nonce) : 0;
  return monocle::CreateGetAuthenticationNonceResponse(
      _fbb,
      nonce__);
}

}  // namespace monocle

#endif  // FLATBUFFERS_GENERATED_GETAUTHENTICATIONNONCERESPONSE_MONOCLE_H_
