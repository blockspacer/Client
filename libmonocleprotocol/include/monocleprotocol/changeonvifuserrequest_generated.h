// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_CHANGEONVIFUSERREQUEST_MONOCLE_H_
#define FLATBUFFERS_GENERATED_CHANGEONVIFUSERREQUEST_MONOCLE_H_

#include "flatbuffers/flatbuffers.h"

#include "onvifuserlevel_generated.h"

namespace monocle {

struct ChangeONVIFUserRequest;
struct ChangeONVIFUserRequestBuilder;

struct ChangeONVIFUserRequest FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef ChangeONVIFUserRequestBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_TOKEN = 4,
    VT_USERNAME = 6,
    VT_PASSWORD = 8,
    VT_ONVIFUSERLEVEL = 10
  };
  uint64_t token() const {
    return GetField<uint64_t>(VT_TOKEN, 0);
  }
  const flatbuffers::String *username() const {
    return GetPointer<const flatbuffers::String *>(VT_USERNAME);
  }
  const flatbuffers::String *password() const {
    return GetPointer<const flatbuffers::String *>(VT_PASSWORD);
  }
  monocle::ONVIFUserlevel onvifuserlevel() const {
    return static_cast<monocle::ONVIFUserlevel>(GetField<int8_t>(VT_ONVIFUSERLEVEL, 1));
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint64_t>(verifier, VT_TOKEN) &&
           VerifyOffset(verifier, VT_USERNAME) &&
           verifier.VerifyString(username()) &&
           VerifyOffset(verifier, VT_PASSWORD) &&
           verifier.VerifyString(password()) &&
           VerifyField<int8_t>(verifier, VT_ONVIFUSERLEVEL) &&
           verifier.EndTable();
  }
};

struct ChangeONVIFUserRequestBuilder {
  typedef ChangeONVIFUserRequest Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_token(uint64_t token) {
    fbb_.AddElement<uint64_t>(ChangeONVIFUserRequest::VT_TOKEN, token, 0);
  }
  void add_username(flatbuffers::Offset<flatbuffers::String> username) {
    fbb_.AddOffset(ChangeONVIFUserRequest::VT_USERNAME, username);
  }
  void add_password(flatbuffers::Offset<flatbuffers::String> password) {
    fbb_.AddOffset(ChangeONVIFUserRequest::VT_PASSWORD, password);
  }
  void add_onvifuserlevel(monocle::ONVIFUserlevel onvifuserlevel) {
    fbb_.AddElement<int8_t>(ChangeONVIFUserRequest::VT_ONVIFUSERLEVEL, static_cast<int8_t>(onvifuserlevel), 1);
  }
  explicit ChangeONVIFUserRequestBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<ChangeONVIFUserRequest> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<ChangeONVIFUserRequest>(end);
    return o;
  }
};

inline flatbuffers::Offset<ChangeONVIFUserRequest> CreateChangeONVIFUserRequest(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint64_t token = 0,
    flatbuffers::Offset<flatbuffers::String> username = 0,
    flatbuffers::Offset<flatbuffers::String> password = 0,
    monocle::ONVIFUserlevel onvifuserlevel = monocle::ONVIFUserlevel::Anonymous) {
  ChangeONVIFUserRequestBuilder builder_(_fbb);
  builder_.add_token(token);
  builder_.add_password(password);
  builder_.add_username(username);
  builder_.add_onvifuserlevel(onvifuserlevel);
  return builder_.Finish();
}

inline flatbuffers::Offset<ChangeONVIFUserRequest> CreateChangeONVIFUserRequestDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint64_t token = 0,
    const char *username = nullptr,
    const char *password = nullptr,
    monocle::ONVIFUserlevel onvifuserlevel = monocle::ONVIFUserlevel::Anonymous) {
  auto username__ = username ? _fbb.CreateString(username) : 0;
  auto password__ = password ? _fbb.CreateString(password) : 0;
  return monocle::CreateChangeONVIFUserRequest(
      _fbb,
      token,
      username__,
      password__,
      onvifuserlevel);
}

}  // namespace monocle

#endif  // FLATBUFFERS_GENERATED_CHANGEONVIFUSERREQUEST_MONOCLE_H_
