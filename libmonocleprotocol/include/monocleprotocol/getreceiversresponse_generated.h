// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_GETRECEIVERSRESPONSE_MONOCLE_H_
#define FLATBUFFERS_GENERATED_GETRECEIVERSRESPONSE_MONOCLE_H_

#include "flatbuffers/flatbuffers.h"

#include "receiver_generated.h"
#include "receivermode_generated.h"
#include "receiverstate_generated.h"

namespace monocle {

struct GetReceiversResponse;
struct GetReceiversResponseBuilder;

struct GetReceiversResponse FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef GetReceiversResponseBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_RECEIVERS = 4
  };
  const flatbuffers::Vector<flatbuffers::Offset<monocle::Receiver>> *receivers() const {
    return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<monocle::Receiver>> *>(VT_RECEIVERS);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_RECEIVERS) &&
           verifier.VerifyVector(receivers()) &&
           verifier.VerifyVectorOfTables(receivers()) &&
           verifier.EndTable();
  }
};

struct GetReceiversResponseBuilder {
  typedef GetReceiversResponse Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_receivers(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<monocle::Receiver>>> receivers) {
    fbb_.AddOffset(GetReceiversResponse::VT_RECEIVERS, receivers);
  }
  explicit GetReceiversResponseBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<GetReceiversResponse> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<GetReceiversResponse>(end);
    return o;
  }
};

inline flatbuffers::Offset<GetReceiversResponse> CreateGetReceiversResponse(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<monocle::Receiver>>> receivers = 0) {
  GetReceiversResponseBuilder builder_(_fbb);
  builder_.add_receivers(receivers);
  return builder_.Finish();
}

inline flatbuffers::Offset<GetReceiversResponse> CreateGetReceiversResponseDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const std::vector<flatbuffers::Offset<monocle::Receiver>> *receivers = nullptr) {
  auto receivers__ = receivers ? _fbb.CreateVector<flatbuffers::Offset<monocle::Receiver>>(*receivers) : 0;
  return monocle::CreateGetReceiversResponse(
      _fbb,
      receivers__);
}

}  // namespace monocle

#endif  // FLATBUFFERS_GENERATED_GETRECEIVERSRESPONSE_MONOCLE_H_
