// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_TRACKDATA_MONOCLE_H_
#define FLATBUFFERS_GENERATED_TRACKDATA_MONOCLE_H_

#include "flatbuffers/flatbuffers.h"

namespace monocle {

struct TRACKDATA;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(8) TRACKDATA FLATBUFFERS_FINAL_CLASS {
 private:
  uint64_t time_;
  uint64_t totaldata_;

 public:
  TRACKDATA() {
    memset(static_cast<void *>(this), 0, sizeof(TRACKDATA));
  }
  TRACKDATA(uint64_t _time, uint64_t _totaldata)
      : time_(flatbuffers::EndianScalar(_time)),
        totaldata_(flatbuffers::EndianScalar(_totaldata)) {
  }
  uint64_t time() const {
    return flatbuffers::EndianScalar(time_);
  }
  uint64_t totaldata() const {
    return flatbuffers::EndianScalar(totaldata_);
  }
};
FLATBUFFERS_STRUCT_END(TRACKDATA, 16);

}  // namespace monocle

#endif  // FLATBUFFERS_GENERATED_TRACKDATA_MONOCLE_H_
