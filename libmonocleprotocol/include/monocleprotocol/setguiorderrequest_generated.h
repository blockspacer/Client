// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_SETGUIORDERREQUEST_MONOCLE_H_
#define FLATBUFFERS_GENERATED_SETGUIORDERREQUEST_MONOCLE_H_

#include "flatbuffers/flatbuffers.h"

#include "guiorder_generated.h"

namespace monocle {

struct SetGuiOrderRequest;
struct SetGuiOrderRequestBuilder;

struct SetGuiOrderRequest FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef SetGuiOrderRequestBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_RECORDINGS = 4,
    VT_MAPS = 6
  };
  const flatbuffers::Vector<flatbuffers::Offset<monocle::GuiOrder>> *recordings() const {
    return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<monocle::GuiOrder>> *>(VT_RECORDINGS);
  }
  const flatbuffers::Vector<flatbuffers::Offset<monocle::GuiOrder>> *maps() const {
    return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<monocle::GuiOrder>> *>(VT_MAPS);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_RECORDINGS) &&
           verifier.VerifyVector(recordings()) &&
           verifier.VerifyVectorOfTables(recordings()) &&
           VerifyOffset(verifier, VT_MAPS) &&
           verifier.VerifyVector(maps()) &&
           verifier.VerifyVectorOfTables(maps()) &&
           verifier.EndTable();
  }
};

struct SetGuiOrderRequestBuilder {
  typedef SetGuiOrderRequest Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_recordings(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<monocle::GuiOrder>>> recordings) {
    fbb_.AddOffset(SetGuiOrderRequest::VT_RECORDINGS, recordings);
  }
  void add_maps(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<monocle::GuiOrder>>> maps) {
    fbb_.AddOffset(SetGuiOrderRequest::VT_MAPS, maps);
  }
  explicit SetGuiOrderRequestBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<SetGuiOrderRequest> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<SetGuiOrderRequest>(end);
    return o;
  }
};

inline flatbuffers::Offset<SetGuiOrderRequest> CreateSetGuiOrderRequest(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<monocle::GuiOrder>>> recordings = 0,
    flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<monocle::GuiOrder>>> maps = 0) {
  SetGuiOrderRequestBuilder builder_(_fbb);
  builder_.add_maps(maps);
  builder_.add_recordings(recordings);
  return builder_.Finish();
}

inline flatbuffers::Offset<SetGuiOrderRequest> CreateSetGuiOrderRequestDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const std::vector<flatbuffers::Offset<monocle::GuiOrder>> *recordings = nullptr,
    const std::vector<flatbuffers::Offset<monocle::GuiOrder>> *maps = nullptr) {
  auto recordings__ = recordings ? _fbb.CreateVector<flatbuffers::Offset<monocle::GuiOrder>>(*recordings) : 0;
  auto maps__ = maps ? _fbb.CreateVector<flatbuffers::Offset<monocle::GuiOrder>>(*maps) : 0;
  return monocle::CreateSetGuiOrderRequest(
      _fbb,
      recordings__,
      maps__);
}

}  // namespace monocle

#endif  // FLATBUFFERS_GENERATED_SETGUIORDERREQUEST_MONOCLE_H_
